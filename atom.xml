<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    
    <title></title>
    <description></description>
    <link>https://pixelartrpg.com</link>
    
    <language>en</language>
    <lastBuildDate>Wed, 20 Jul 2022 13:31:30 -0500</lastBuildDate>
    <generator>https://pixelartrpg.com</generator>
    <docs>http://cyber.harvard.edu/rss/rss.html</docs>
    
    <item>
      <title>Our Art Style</title>
      <link>https://pixelartrpg.com/07/20/2022/our-art-style/</link>
      <description>&lt;br&gt;
One of the biggest things that held me back from finishing any of the many games I started in the past... was graphics. You really don&#39;t understand how much of a game is graphics when you first start. You think, I&#39;ll just put in some simple place holders and start coding up my game. Which works alright until you want your game to have any kind of flavor. It was often at this stage that I would go down the rabbit hole of trying to make my own art and getting discouraged and just giving up on the whole idea. It is because of these past failures that had me go down the path of looking for resources and skills outside of my own.
&lt;br&gt;&lt;br&gt;
When I first started toying with the idea of making a game again, I already knew what I wanted! or so I thought. After playing so many many different indie games and having a blast, my mind kept jumping around from art style, game styles, directions... The question was, how did I want my story to be represented. What medium gave me the most direct path to telling a story and engaging my players.
&lt;br&gt;&lt;br&gt;
After bouncing ideas around with my wife, I landed on top down SNES style art. Not only was it one of the easier styles to get into (or so my silly brain thought) but it did not call for any 3D modeling or programming a camera. I convinced the wife to start learning Pixel Art with me and we dove in feet first. Youtube tutorial after tutorial after tutorial, whats the best program, how should we approach it, color palletes...what? We need to pick colors. Wait, you color theory and shading... and its even harder because you only have a few hundred dots to work with! Why oh why is pixel art so complex. Its little cute sprites and tiles. Oh ho ho did we learn a lot. But, we weren&#39;t discourgaged. Larimaria set off to start working on mastering (ok getting basics down) pixel art and I set off to start building the fundamentals of the game. 
&lt;br&gt;&lt;br&gt;
Then it hit me, ugh I am going to need some basic stuff to get me going. Which lead me to a wonderful site called itch.io. The mecha for indie game devs (imho). They had graphics, sounds, wallpapers, animations, etc. I just happened to have started looking around a summer sale! I quickly snatched up a few sprites and tile sets. I was so excited, not only did I have what I needed to start coding, but we also had examples for Larimaria to reference and learn from. We worked this way for a couple of weeks learning and building the game base. It was fantastic and motivating. But, as we implemented more features and coming up with more ideas for the game. We realized we would need more art to get going. The sprites I found were great, but didnt have animations in all directions, only to the left. This was because a lot of the pixel art artist are targeting RPG Maker, which is turn based combat. IE: player on the right, enemy on the left. 
&lt;br&gt;&lt;br&gt;
I sent Larimaria down the path of learning to add more animation directions. But its far more complicated than you would think! Not only did I need her to design sprie animations, that could be layered with custom hair, eyes, mouths, headgear, armor, etc, etc, etc... I needed the animation to not be holding anything. I want to be able to overlay lots of different weapon arts and have a pixel art game where gear changes as you progress and upgrade. This added a whole other level of complexity. Understanding where items lay, how they shade, how the flow... or move rigid because they are metal. It was a very large task! It was this mountain that pushed me to digging deeper on Itch.io and seeing what I could find for reference for Larimaria to work from. 
&lt;br&gt;&lt;br&gt;
Enter [Seliel The Shaper](https://seliel-the-shaper.itch.io/)! Their amazing Mana Seed collection was exactly the art style that Pixel Art RPG was heading toward. When Larimaria and I sat down to discuss how we wanted the game to look, we kept falling back to the greats of SNES. Chrono Trigger, Secret Of Mana, Illusion Of Gaia, Terranigma, Secret Of Evermore... I could go on and on. But I think you all get the idea. We wanted to relive the nostalgia of our childhoods all while putting our own spin. At first I was overjoyed to find the base sprite package from Seliel. It was exactly what we were needing for the animations. Layered sprites, animation in all directions, modeled in the art style of SoM and Chrono Trigger. I quickly put Larimaria to work creating some basic weapons and armor with animations. Her first outfit was a simple robe. It wasn&#39;t extrodinary but she was learning and progress was being made!
&lt;br&gt;&lt;br&gt;
Here are two of the things Larimaria put together:
&lt;br&gt;&lt;br&gt;
A bouncy slime (her first sprite and animation)
&lt;img src=&#34;https://pixelartrpg.com/images/slime.gif&#34; class=&#34;w-[64px]&#34; /&gt;
&lt;br&gt;
A fire spell
&lt;img src=&#34;https://pixelartrpg.com/images/castfire.gif&#34; class=&#34;w-[64px]&#34; /&gt;
&lt;br&gt;&lt;br&gt;
The robes she is working on for the sprite:
&lt;img src=&#34;https://pixelartrpg.com/images/aesprite.PNG&#34; class=&#34;w-3/4&#34; /&gt;</description>
      <guid>https://pixelartrpg.com/07/20/2022/our-art-style/</guid>
      <pubDate>Wed, 20 Jul 2022 13:31:30 -0500</pubDate>
    </item>
    
    <item>
      <title>Markdown Test</title>
      <link>https://pixelartrpg.com/07/19/2022/markdown-test/</link>
      <description>&lt;h2 id=&#34;emphasis&#34;&gt;Emphasis&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;This is bold text&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is italic text&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;Strikethrough&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;lists&#34;&gt;Lists&lt;/h2&gt;
&lt;p&gt;Unordered&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a list by starting a line with &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, or &lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sub-lists are made by indenting 2 spaces:
&lt;ul&gt;
&lt;li&gt;Marker character change forces new list start:
&lt;ul&gt;
&lt;li&gt;Ac tristique libero volutpat at&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Facilisis in pretium nisl aliquet&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Nulla volutpat aliquam velit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Very easy!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ordered&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Lorem ipsum dolor sit amet&lt;/li&gt;
&lt;li&gt;Consectetur adipiscing elit&lt;/li&gt;
&lt;li&gt;Integer molestie lorem at massa&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;foo&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;bar&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bar&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;foo&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tables&#34;&gt;Tables&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;path to data files to supply the data that will be passed into templates.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;engine&lt;/td&gt;
&lt;td&gt;engine to be used for processing templates. Handlebars is the default.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ext&lt;/td&gt;
&lt;td&gt;extension to be used for dest files.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Right aligned columns&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Option&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;data&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;path to data files to supply the data that will be passed into templates.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;engine&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;engine to be used for processing templates. Handlebars is the default.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;ext&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;extension to be used for dest files.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Left aligned columns&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Option&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;data&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;path to data files to supply the data that will be passed into templates.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;engine&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;engine to be used for processing templates. Handlebars is the default.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ext&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;extension to be used for dest files.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://pixelartrpg.com&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;
</description>
      <guid>https://pixelartrpg.com/07/19/2022/markdown-test/</guid>
      <pubDate>Tue, 19 Jul 2022 22:39:36 -0500</pubDate>
    </item>
    
  </channel>
</rss>
